name: Security & Dependency Check

on:
  schedule:
    - cron: '0 2 * * 1'  # 每周一凌晨2点运行
  workflow_dispatch:  # 手动触发
  push:
    branches: [ main ]
    paths:
      - '**/build.gradle'
      - 'gradle.properties'

jobs:
  dependency-check:
    name: Dependency Vulnerability Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Cache Gradle dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Run dependency vulnerability check
      run: |
        echo "Checking for vulnerable dependencies..."
        ./gradlew dependencyCheckAnalyze || true
        
    - name: Upload dependency check report
      uses: actions/upload-artifact@v4
      with:
        name: dependency-check-report
        path: build/reports/dependency-check-report.html
        
    - name: Create security issue on vulnerabilities
      if: failure()
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: '🔒 安全警告：发现依赖漏洞',
            body: `检测到项目依赖中存在安全漏洞。
            
            请查看构建产物中的dependency-check-report.html了解详情。
            
            建议立即更新相关依赖版本。`,
            labels: ['security', 'dependencies']
          });