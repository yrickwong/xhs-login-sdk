name: Release

on:
  push:
    tags:
      - 'v*'  # 当推送版本标签时触发

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Cache Gradle dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Extract version from tag
      id: version
      run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      
    - name: Build release AAR
      run: ./gradlew :xhslogin:assembleRelease
      
    - name: Generate changelog
      id: changelog
      run: |
        echo "changelog<<EOF" >> $GITHUB_OUTPUT
        git log $(git describe --tags --abbrev=0 HEAD^)..HEAD --pretty=format:"* %s" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
        
    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ steps.version.outputs.version }}
        body: |
          ## 🎉 XiaoHongShu Login SDK ${{ steps.version.outputs.version }}
          
          ### 📋 更新内容
          ${{ steps.changelog.outputs.changelog }}
          
          ### 📦 集成方式
          ```gradle
          implementation 'com.xiaohongshu:login:${{ steps.version.outputs.version }}'
          ```
          
          ### 📚 文档
          详细使用说明请参考 [SDK流程图](SDK_FLOW_DIAGRAM.md)
        draft: false
        prerelease: false
        
    - name: Upload AAR to release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: xhslogin/build/outputs/aar/xhslogin-release.aar
        asset_name: xhs-login-sdk-${{ steps.version.outputs.version }}.aar
        asset_content_type: application/octet-stream